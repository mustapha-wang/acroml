(()=>{var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};(()=>{"use strict";e.r(t),e.d(t,{CSVTextDD:()=>u,default:()=>i});const o=AcroML.DD,r=AcroML.resources,l=AcroML.CSVText,n=AcroML.utils;class u extends o{constructor(){super(),this.content=""}buildingDD(){let e=new l;e.content=this.content;let t=null,o=null,u=null,i=null;this.DD={};let s=this,c={};e.parse((function(e){for(let t=0;t<e.length;t++)c[e[t]]=t;const l=["DDKey","LCID","DisplayValue"];for(let e=0;e<l.length;e++)if(null==c[l[e]])throw new Error(n.printf(r.S_NotFoundField,l[e]));t=c.DDKey,o=c.LCID,u=c.SeqNo,i=c.DisplayValue}),(function(e){let r=e[i];r&&s.addDisplayValue(e[t],e[o],null==u?"0":e[u],r)})),super.buildingDD()}}const i=u;o.registerDD(".lng","utf16le",[255,254],u),o.registerDD(".csv.txt","utf8",[],u)})();var o=AcroML="undefined"==typeof AcroML?{}:AcroML;for(var r in t)o[r]=t[r];t.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();